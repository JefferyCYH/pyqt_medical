# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'xftp.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from paramiko import SSHClient, AutoAddPolicy
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_XFTPCONNECT(object):
    def setupUi(self, XFTPCONNECT):
        XFTPCONNECT.setObjectName("XFTPCONNECT")
        XFTPCONNECT.resize(556, 362)
        self.gridLayout = QtWidgets.QGridLayout(XFTPCONNECT)
        self.gridLayout.setObjectName("gridLayout")
        self.label_2 = QtWidgets.QLabel(XFTPCONNECT)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(XFTPCONNECT)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 11, 0, 1, 2)
        self.lineEdit = QtWidgets.QLineEdit(XFTPCONNECT)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 1, 0, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(XFTPCONNECT)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout.addWidget(self.lineEdit_2, 3, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(XFTPCONNECT)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout.addWidget(self.lineEdit_3, 6, 0, 1, 1)
        self.lineEdit_5 = QtWidgets.QLineEdit(XFTPCONNECT)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.gridLayout.addWidget(self.lineEdit_5, 10, 0, 1, 1)
        self.label = QtWidgets.QLabel(XFTPCONNECT)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(XFTPCONNECT)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 7, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(XFTPCONNECT)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 9, 0, 1, 2)
        self.label_3 = QtWidgets.QLabel(XFTPCONNECT)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 5, 0, 1, 1)
        self.buttonBox = QtWidgets.QDialogButtonBox(XFTPCONNECT)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout.addWidget(self.buttonBox, 13, 0, 1, 3)
        self.lineEdit_4 = QtWidgets.QLineEdit(XFTPCONNECT)
        self.lineEdit_4.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout.addWidget(self.lineEdit_4, 8, 0, 1, 1)
        self.lineEdit_6 = QtWidgets.QLineEdit(XFTPCONNECT)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.gridLayout.addWidget(self.lineEdit_6, 12, 0, 1, 1)

        self.retranslateUi(XFTPCONNECT)
        self.buttonBox.accepted.connect(self.setupinfo)
        self.buttonBox.rejected.connect(XFTPCONNECT.reject)
        QtCore.QMetaObject.connectSlotsByName(XFTPCONNECT)

    def retranslateUi(self, XFTPCONNECT):
        _translate = QtCore.QCoreApplication.translate
        XFTPCONNECT.setWindowTitle(_translate("XFTPCONNECT", "XFTPCONNECT"))
        self.label_2.setText(_translate("XFTPCONNECT", "port："))
        self.label_6.setText(_translate("XFTPCONNECT", "pth_path_local:"))
        self.lineEdit.setText(_translate("XFTPCONNECT", "10.193.218.57"))
        self.lineEdit_2.setText(_translate("XFTPCONNECT", "5000"))
        self.lineEdit_3.setText(_translate("XFTPCONNECT", "yang"))
        self.lineEdit_5.setText(_translate("XFTPCONNECT", "/home/yang/SAR/pkl/xftptest/"))
        self.label.setText(_translate("XFTPCONNECT", "ip："))
        self.label_4.setText(_translate("XFTPCONNECT", "password："))
        self.label_5.setText(_translate("XFTPCONNECT", "pth_path_xftp:"))
        self.label_3.setText(_translate("XFTPCONNECT", "user："))
        self.lineEdit_4.setText(_translate("XFTPCONNECT", "123456"))
        self.lineEdit_6.setText(_translate("XFTPCONNECT", "E:/D/pyqt_medical-cy/model/"))

    def setupinfo(self):
        myip=self.lineEdit.text()
        myport=self.lineEdit_2.text()
        myname=self.lineEdit_3.text()
        mypassword=self.lineEdit_4.text()
        myxftppath=self.lineEdit_5.text()
        mylocalpath=self.lineEdit_6.text()
        print('Connecting to ' + myip + ':' + myport + ' path' + myxftppath)
        ssh = SSHClient()
        # 允许连接不在know_hosts文件里的主机
        ssh.set_missing_host_key_policy(AutoAddPolicy())


        # 连接服务器
        ssh.connect(hostname=myip, port=int(myport), username=myname, password=mypassword)


        # 执行命令
        print('connect success')

        commands = 'nvidia-smi'
        stdin, stdout, stderr = ssh.exec_command(commands)
        # 获取命令结果
        res, err = stdout.read(), stderr.read()
        result = res if res else err
        # 将字节类型 转换为 字符串类型
        result = str(result, encoding='utf-8')
        print(result)
        # 从远程通过ftp下载文件到本地
        sftp = ssh.open_sftp()

        if(myxftppath[-1]=='/'):
            myxftppath=myxftppath[0:-1]

        if (mylocalpath[-1] == '/'):
            mylocalpath = mylocalpath[0:-1]

        files=sftp.listdir_attr(myxftppath)
        for x in files:
          #遍历路径，把文件全下载下来
          myxftpfilename=myxftppath+'/'+x.filename
          print(x.filename)
          mylocalfilename=mylocalpath+'/'+x.filename
          print('Get文件'+x.filename+'传输中...')

          sftp.get(remotepath=myxftpfilename,
                 localpath=mylocalfilename)
        commands2 = 'ls-a'
        # 关闭连接
        print('传输完成,closing...')

        ssh.close()
        print('closed')
